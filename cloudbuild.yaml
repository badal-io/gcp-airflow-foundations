# - Airflow Env variables.
substitutions:
  _BUILD_IMG_NAME: airflow2_cicd_2:latest
  _PYTHON_VERSION: '3.8'
#  _PROJECT_ID: airflow-framework
steps:
  # - Build a new Airflow2 image.
  # [START build-airflow2]
  - id: build-airflow2
    name: gcr.io/kaniko-project/executor
    args:
      - --destination=gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}
      - --cache=true
      - --cache-ttl=2h
      - --dockerfile=docker/Dockerfile
  # - Unit tests.
  # [START unit-test]
  - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
    waitFor: ['build-airflow2']
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - 'whoami'
    id: "whoami"
  - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
    waitFor: ['build-airflow2']
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - 'pip list'
    id: "list"
  # - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
  #   waitFor: ['build-airflow2']
  #   entrypoint: '/bin/bash'
  #   args:
  #     - '-c'
  #     - 'python -V'
  #   id: "python-versions"
  # - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
  #   waitFor: ['build-airflow2']
  #   entrypoint: '/bin/bash'
  #   args: ['-c', 'python', 'import sys; print(sys.path)']
  #   id: "python-list"
  # - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
  #   waitFor: ['build-airflow2']
  #   entrypoint: '/bin/bash'
  #   args: ['-c', 'pip install -r requirements.txt']
  #   id: "python-install"

  - name: python
    waitFor: ['build-airflow2']
    entrypoint: pip
    args: ["install", "-r", "docker/requirements-ci.txt"]
    id: "install-req"

  - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
    waitFor: ['build-airflow2']
    entrypoint: /bin/bash
    env:
  #    - 'PYTHONPATH=/opt/airflow,/home/airflow/.local'
    args:
    - '-c'
    - |
      echo 'getting env'
      env
      echo 'PATH: ' $$PATH
      echo 'python -m site'
      python -m site
      echo 'pwd'
      pwd

    id: "test1"
#  - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
#    waitFor: ['build-airflow2']
#    entrypoint: '/bin/bash'
#    args:
#      - '-c'
#      - 'pip3 install --no-cache-dir -r docker/requirements-ci.txt'
#    id: "unit-test-2"
  - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
    waitFor: ["install-req", 'build-airflow2','test1']
    env:
  #    - 'PYTHONPATH=/home/airflow/.local'
    entrypoint: python
    dir: /home/airflow/
    args: ['-m', 'pytest', 'tests/unit', '-vv']
    id: "unit-test"
  - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
    waitFor: ["install-req", 'build-airflow2','test1']
    env:
 #     - 'PYTHONPATH=/home/airflow/.local'
    dir: /home/airflow/
    entrypoint: python
    args: ['-m', 'pytest', 'tests/unit', '-vv']
    id: "unit-test-2"
  - name: 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
    waitFor: ['build-airflow2']
    env:
 #     - 'PYTHONHOME=/home/airflow/.local'
    entrypoint: /bin/bash
    dir: /home/airflow/
    args: ['-c', 'python', '-m', 'pytest', 'tests/integration', '-vv']
    id: "integration-test"

    # - -c
    # - |
    # 'python', '-m', 'pytest', 'tests/unit', '-vv'|| { exit 1; }

  #   id: "unit-test"

  # - name: python:3.8
  #   entrypoint: pip
  #   args: ["install", "-r", "docker/requirements-ci.txt", "--user"]

  # - name: python:3.8
  #   entrypoint: python
  #   args: ['-m', 'pytest', 'tests/unit']
  
  # [END unit-test]

timeout: 1200s
images:
  - 'gcr.io/${PROJECT_ID}/${_BUILD_IMG_NAME}'
options:
  substitution_option: 'ALLOW_LOOSE'